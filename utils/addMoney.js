const User = require('../models/User');

async function addMoney(userId, amount) {
  try {
    const user = await User.findOneAndUpdate(
      { userId: userId },
      { $inc: { balance: amount } },
      { new: true, upsert: true }
    );

    console.log(`ƒê√£ c·ªông ${amount} coins cho user ${userId}. S·ªë d∆∞ m·ªõi: ${user.balance.toLocaleString()} coins`);
    const userToNotify = await interaction.client.users.fetch(userId);
    await userToNotify.send({
      content: `üéâ B·∫°n ƒë√£ ƒë∆∞·ª£c c·ªông **${amount.toLocaleString()} coins**! S·ªë d∆∞ hi·ªán t·∫°i: **${user.balance.toLocaleString()} coins**.`,
    });
  } catch (error) {
    console.error('L·ªói khi c·ªông ti·ªÅn:', error);
  }
}

// L·∫•y tham s·ªë t·ª´ command line
const args = process.argv.slice(2);
if (args.length !== 2) {
  console.log('S·ª≠ d·ª•ng: node addMoney.js <userId> <amount>');
  process.exit(1);
}

const userId = args[0];
const amount = parseInt(args[1], 10);

if (isNaN(amount) || amount <= 0) {
  console.log('S·ªë ti·ªÅn ph·∫£i l√† m·ªôt s·ªë d∆∞∆°ng.');
  process.exit(1);
}

//addMoney(userId, amount);
addMoney(userId, amount, { client: { users: { fetch: async (id) => ({ send: async (msg) => console.log(`Sent to ${id}: ${msg.content}`) }) } } });