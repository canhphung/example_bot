const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const User = require('../models/User');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('profile')
    .setDescription('Xem h·ªì s∆° c·ªßa b·∫°n ho·∫∑c ng∆∞·ªùi kh√°c')
    .addUserOption(option => 
      option
        .setName('user')
        .setDescription('Ng∆∞·ªùi d√πng c·∫ßn xem h·ªì s∆°')
        .setRequired(false)
    ),
  async execute(interaction) {
    try {
      // L·∫•y ng∆∞·ªùi d√πng m·ª•c ti√™u (target) ho·∫∑c ch√≠nh ng∆∞·ªùi g·ªçi l·ªánh
      const targetUser = interaction.options.getUser('user') || interaction.user;
      
      // Ki·ªÉm tra n·∫øu target l√† bot
      if (targetUser.bot) {
        return interaction.reply({
          content: '‚ùå Kh√¥ng th·ªÉ xem h·ªì s∆° c·ªßa bot!',
          ephemeral: true
        });
      }

      // T√¨m ho·∫∑c t·∫°o ng∆∞·ªùi d√πng trong database
      const userData = await User.findOneAndUpdate(
        { userId: targetUser.id },
        { $setOnInsert: { balance: 10000 } },
        { upsert: true, new: true }
      );

      // T·∫°o embed
      const profileEmbed = new EmbedBuilder()
        .setTitle(`üìÅ H·ªí S∆† ‚Ä¢ ${targetUser.username}`)
        .setColor('#00BFFF')
        .setThumbnail(targetUser.displayAvatarURL({ dynamic: true }))
        .addFields(
          { 
            name: 'üí∞ S·ªë d∆∞', 
            value: `\`${userData.balance.toLocaleString()} coins\``, 
            inline: true 
          },
          { 
            name: 'üìÖ Tham gia', 
            value: `<t:${Math.floor(userData.createdAt.getTime() / 1000)}:R>`, 
            inline: true 
          }
        )
        .setFooter({ text: `ID: ${targetUser.id}` });

      await interaction.reply({ 
        embeds: [profileEmbed],
        ephemeral: true 
      });

    } catch (error) {
      console.error('L·ªói l·ªánh profile:', error);
      await interaction.reply({
        content: '‚ùå ƒê√£ x·∫£y ra l·ªói khi t·∫£i h·ªì s∆°!',
        ephemeral: true
      });
    }
  }
};